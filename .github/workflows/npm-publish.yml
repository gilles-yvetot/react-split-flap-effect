name: Publish to npm

on:
  # Publish when a new release is created
  release:
    types: [published]
  # Or publish when pushing to master (optional - comment out if you only want release-based publishing)
  push:
    branches:
      - master
    paths:
      - "src/**"
      - "package.json"
      - "rollup.config.mjs"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:ci

      - name: Type check
        run: npm run type-check

      - name: Build
        run: npm run build

  publish-npm:
    needs: test
    runs-on: ubuntu-latest
    # Only run on master branch or release
    if: github.ref == 'refs/heads/master' || github.event_name == 'release'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          registry-url: "https://registry.npmjs.org"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Check if version changed
        id: version-check
        run: |
          # Get the current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Check if this version already exists on npm
          if npm view $(node -p "require('./package.json').name")@$CURRENT_VERSION version 2>/dev/null; then
            echo "version_exists=true" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION already exists on npm"
          else
            echo "version_exists=false" >> $GITHUB_OUTPUT
            echo "Version $CURRENT_VERSION is new and will be published"
          fi

      - name: Publish to npm
        if: steps.version-check.outputs.version_exists == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        if: steps.version-check.outputs.version_exists == 'false' && github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag v${{ steps.version-check.outputs.current_version }}
          git push origin v${{ steps.version-check.outputs.current_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
